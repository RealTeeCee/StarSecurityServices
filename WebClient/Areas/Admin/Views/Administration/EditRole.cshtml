@model Models.ViewModel.EditRoleViewModel

@{
    ViewData["Title"] = "EditRole";    
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@*<div class="col-md-6">
    <form asp-action="EditRole" class="mt-3">
        <div asp-validation-summary="All" class="text-danger"></div>

        <input type="hidden" asp-for="Id" disabled class="form-control" />

        <div class="form-group row">
            <label asp-for="RoleName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="RoleName" class="form-control" readonly />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-10">
                <button type="submit" class="btn btn-primary">Update</button>
                <a asp-action="ListRoles" type="submit" class="btn btn-outline-danger">Cancel</a>
            </div>
        </div>
    </form>
</div> *@   

<div class="col-md-4">
    <div class="card">
        <div class="card-header">
            <h3>Users in <span class="text-danger">@Model.RoleName</span> role</h3>
        </div>
        <div class="card-body">
            @if (Model.Users.Any())
            {
                @foreach (var user in Model.Users)
                {
                    <h5 class="card-title">@user</h5>
                }
            }
            else
            {
                <h5 class="card-title">None at the moment</h5>
            }
        </div>
        <div class="card-footer d-flex justify-content-between">
            <a asp-route-roleId="@Model.Id" asp-action="EditUsersInRole" class="btn btn-primary" style="width:auto">Update User In Role</a>
            <a asp-action="ListRoles" class="btn btn-outline-secondary">Back</a>
        </div>
    </div>
</div>
    




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
