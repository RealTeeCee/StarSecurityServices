@model Models.ViewModel.EditRoleViewModel

@{
    ViewData["Title"] = "EditRole";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>EditRole</h1>

<hr />
    
<form asp-action="EditRole" class="mt-3">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row">
        <label asp-for="Id" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10"> 
            <input asp-for="Id" disabled class="form-control" />
        </div>                               
    </div>
   
    <div class="form-group row">
        <label asp-for="RoleName" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="RoleName" class="form-control" />
            <span asp-validation-for="RoleName" class="text-danger"></span>
        </div>
    </div>
    
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary" >Update</button>
            <a asp-action="ListRoles" type="submit" class="btn btn-primary">Cancel</a>
        </div>
    </div>
    <br />
    <div class="card">
        <div class="card-header">
            <h3>Users in this role</h3>
        </div>
        <div class="card-body">
            @if(Model.Users.Any())
            {
                @foreach (var user in Model.Users)
                {
                    <h5 class="card-title">@user</h5>
                }
            }
            else
            {
                <h5 class="card-title">None at the moment</h5>
            }
        </div>
        <div class="card-footer">
            <a asp-action="#" class="btn btn-primary" style="width:auto">Add Users</a>
            <a asp-action="#" class="btn btn-primary" style="width:auto">Remove Users</a>
        </div>
    </div>

</form>
    




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
