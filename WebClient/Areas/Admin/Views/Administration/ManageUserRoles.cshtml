@using System.Security.Claims
@model List<Models.ViewModel.UserRolesViewModel>
@inject UserManager<User> userManager;

@{
    ViewData["Title"] = "Edit User In Roles";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var userId = ViewBag.userId;
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var currentRolesName = await userManager.GetRolesAsync(await userManager.FindByIdAsync(currentUserId));
}

<h1>Edit Role In Users</h1>


<hr />

<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="card-header">
        <h2>Manage User Roles</h2>
    </div>
    <div class="card-body">
        @for (int i = 0; i < Model.Count; i++)
        {
            var check = false;

            foreach(var currentRoleName in currentRolesName){
                @if( (currentRoleName == "GeneralAdmin" && currentRoleName == Model[i].RoleName)   || Model[i].RoleName == "SuperAdmin")
                {
                    check = true;
                }
            }

            if(check == true){
                continue;
            }

            <input type="hidden" asp-for="@Model[i].RoleId" />
            <input type="hidden" asp-for="@Model[i].RoleName" />
            <div class="form-check m-1">
                <input class="form-check-input" asp-for="@Model[i].IsSelected" />
                <label class="form-check-label" asp-for="@Model[i].IsSelected">
                    <!-- Now when click on label it checked status toggle as expected -->
                    @Model[i].RoleName
                </label>
            </div>

        }
    </div>
    <div class="card-footer">
        <input type="submit" value="Update" style="width:auto" class="btn btn-primary" />
        <a asp-action="EditUser" asp-route-id="@userId" value="Update" style="width:auto" class="btn btn-primary" />Cancel</a>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
